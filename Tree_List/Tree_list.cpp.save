#include"Tree.h"
#include<iostream>
using namespace std;

Tree::Tree(int size)
{
    m_iSize=size;
    m_pTree=new int[size];
    for(int i=0;i<m_iSize;i++)  //一开始给树赋初值，全空
    {
        m_pTree[i]=0;
    }
}

Tree::~Tree()
{
    delete m_pTree;
    m_pTree=NULL;
}

int * Tree::SearchNode(int nodeIndex)
{
    if(nodeIndex<0||nodeIndex>m_iSize)
        return NULL;
    if(m_pTree[nodeIndex]==0)   //还要判断结点是否为空
        return NULL;
    return *m_pTree[nodeIndex];
}

bool Tree::AddNode(int nodeIndex,int direction,int *pNode)
{
    if(nodeIndex<0||nodeIndex>m_iSize)
        return false;
    if(m_pTree[nodeIndex]==0)   //还要判断结点是否为空
        return false;
    if(direction==1)    //1 左孩子
        m_pTree[2*nodeIndex+1]=*pNode;
    if(direction==2)    //2 右孩子
        m_pTree[2*nodeIndex+2]=*pNode;
    return true;
}

bool Tree::DeleteNode(int nodeIndex,int *pNode)
{
    if(nodeIndex<0||nodeIndex>m_iSize)
        return false;
    if(m_pTree[nodeIndex]==0)   //还要判断结点是否为空
        return false;
}




























